{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\n    'Supabase URL and/or Anon Key are not defined. Please check your .env.local file and ensure it contains NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY. Remember to restart your development server after creating or modifying the .env.local file.'\n  );\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAItC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons/AssociationLogoPlaceholder.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function AssociationLogoPlaceholder(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      fill=\"currentColor\"\n      aria-label=\"Association Logo Placeholder\"\n      {...props}\n    >\n      <rect width=\"100\" height=\"100\" rx=\"10\" fill=\"hsl(var(--muted))\" />\n      <text\n        x=\"50\"\n        y=\"55\"\n        fontFamily=\"Arial, sans-serif\"\n        fontSize=\"12\"\n        fill=\"hsl(var(--muted-foreground))\"\n        textAnchor=\"middle\"\n      >\n        NAZS Logo\n      </text>\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEO,SAAS,2BAA2B,KAA8B;IACvE,qBACE,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,cAAW;QACV,GAAG,KAAK;;0BAET,6LAAC;gBAAK,OAAM;gBAAM,QAAO;gBAAM,IAAG;gBAAK,MAAK;;;;;;0BAC5C,6LAAC;gBACC,GAAE;gBACF,GAAE;gBACF,YAAW;gBACX,UAAS;gBACT,MAAK;gBACL,YAAW;0BACZ;;;;;;;;;;;;AAKP;KAtBgB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/AppContext.tsx"],"sourcesContent":["\n\"use client\";\nimport type { ReactNode } from 'react';\nimport Image from 'next/image';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport type { Student, LogoSettings, FYBWeekSettings, AppState, FYBEventImage, AppSettingsFromSupabase } from '@/types';\nimport { supabase } from '@/lib/supabaseClient';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AssociationLogoPlaceholder } from '@/components/icons/AssociationLogoPlaceholder';\n\n// Helper to convert Data URI to Blob for Supabase upload\nfunction dataURIToBlob(dataURI: string): Blob | null {\n  try {\n    const splitDataURI = dataURI.split(',');\n    if (splitDataURI.length < 2) throw new Error(\"Invalid data URI\");\n    const byteString = splitDataURI[0].includes('base64') ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1]);\n    const mimeString = splitDataURI[0].split(':')[1]?.split(';')[0];\n    if (!mimeString) throw new Error(\"MIME type not found in data URI\");\n    \n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) ia[i] = byteString.charCodeAt(i);\n    return new Blob([ia], { type: mimeString });\n  } catch (error) {\n    console.error(\"Error converting data URI to Blob:\", error);\n    return null;\n  }\n}\n\nconst defaultLogos: LogoSettings = {\n  associationLogo: null,\n  schoolLogo: null,\n};\n\nconst defaultFYBWeekSettings: FYBWeekSettings = {\n  isUnlocked: false,\n  title: 'FYB Week Extravaganza!',\n  schedule: 'Detailed schedule coming soon...',\n  activities: 'Exciting activities lineup to be announced!',\n  eventImages: [],\n};\n\nconst defaultAdminPin = \"171225\"; // Keep client-side for UI lock, not for DB auth\n\nconst APP_SETTINGS_ID = 1; // Singleton row ID for app_settings table\nconst STORAGE_BUCKET_NAME = 'app-public-assets';\n\n\ninterface AppContextType extends AppState {\n  setStudents: React.Dispatch<React.SetStateAction<Student[]>>; // Keep for local state updates after DB ops\n  \n  updateLogo: (logoType: 'associationLogo' | 'schoolLogo', fileDataUrl: string | null) => Promise<void>;\n  updateFybWeekTextSettings: (settings: Partial<Pick<FYBWeekSettings, 'title' | 'schedule' | 'activities' | 'isUnlocked'>>) => Promise<void>;\n\n  loginAdmin: (pin: string) => boolean;\n  logoutAdmin: () => void;\n  \n  addStudent: (studentData: Omit<Student, 'id' | 'created_at' | 'updated_at'>) => Promise<void>;\n  updateStudent: (studentData: Student) => Promise<void>;\n  deleteStudent: (studentId: string) => Promise<void>;\n  \n  addFybEventImages: (files: File[]) => Promise<void>;\n  deleteFybEventImage: (imageId: string) => Promise<void>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\n  const [students, setStudents] = useState<Student[]>([]);\n  const [logos, setLogosState] = useState<LogoSettings>(defaultLogos);\n  const [fybWeekSettings, setFybWeekSettingsState] = useState<FYBWeekSettings>(defaultFYBWeekSettings);\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n  \n  const [isLoading, setIsLoading] = useState(true);\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [isLogoRendered, setIsLogoRendered] = useState(false);\n\n  useEffect(() => {\n    async function loadInitialData() {\n      try {\n        if (!supabase) {\n          throw new Error(\"Supabase client is not initialized. Check your environment variables and supabaseClient.ts.\");\n        }\n\n        // Fetch students\n        const { data: studentsData, error: studentsError } = await supabase\n          .from('students')\n          .select('*')\n          .order('name', { ascending: true });\n        if (studentsError) throw studentsError;\n        setStudents(studentsData || []);\n\n        // Fetch app_settings\n        const { data: settingsData, error: settingsError } = await supabase\n          .from('app_settings')\n          .select('logos, fyb_week_settings')\n          .eq('id', APP_SETTINGS_ID)\n          .single();\n        \n        if (settingsError && settingsError.code !== 'PGRST116') { // PGRST116: single row not found\n             throw settingsError;\n        }\n\n        if (settingsData) {\n          setLogosState(settingsData.logos || defaultLogos);\n          setFybWeekSettingsState(settingsData.fyb_week_settings || defaultFYBWeekSettings);\n        } else {\n          console.warn(\"No app_settings found in database (ID: \", APP_SETTINGS_ID, \"). Using client-side defaults. Consider seeding this table.\");\n          setLogosState(defaultLogos);\n          setFybWeekSettingsState(defaultFYBWeekSettings);\n        }\n        \n      } catch (error: any) {\n        let isFailedToFetch = false;\n        let extractedErrorMessage = \"Unknown error during data load.\";\n\n        if (error && typeof error === 'object') {\n          if ('message' in error && typeof error.message === 'string' && (error.message.toLowerCase().includes(\"failed to fetch\") || error.message.toLowerCase().includes(\"typeerror: failed to fetch\"))) {\n            isFailedToFetch = true;\n            extractedErrorMessage = error.message;\n          }\n           if (!isFailedToFetch && 'details' in error && typeof error.details === 'string' && (error.details.toLowerCase().includes(\"failed to fetch\") || error.details.toLowerCase().includes(\"typeerror: failed to fetch\"))) {\n            isFailedToFetch = true;\n            extractedErrorMessage = error.details;\n          }\n        } else if (typeof error === 'string' && (error.toLowerCase().includes(\"failed to fetch\") || error.toLowerCase().includes(\"typeerror: failed to fetch\"))) {\n          isFailedToFetch = true;\n          extractedErrorMessage = error;\n        }\n\n        if (isFailedToFetch) {\n            const troubleshootingMessage = `\nCRITICAL CONNECTION ERROR: 'Failed to fetch'\nThis means your application could NOT connect to the Supabase server.\nPlease meticulously verify the troubleshooting steps in the README or previous console logs.\nRaw Error: ${extractedErrorMessage}`;\n            console.error(troubleshootingMessage, error);\n        } else {\n            console.error('An unexpected error occurred while loading initial data from Supabase:', error);\n        }\n        \n        // Fallback to defaults\n        setStudents([]);\n        setLogosState(defaultLogos);\n        setFybWeekSettingsState(defaultFYBWeekSettings);\n      } finally {\n        setIsDataFetched(true);\n      }\n      \n      const storedAdminLogin = localStorage.getItem('nazsAdminLoggedIn');\n      if (storedAdminLogin === 'true') {\n        setIsAdminLoggedIn(true);\n      }\n    }\n    loadInitialData();\n  }, []);\n\n  useEffect(() => {\n    if (isDataFetched && (isLogoRendered || !logos.associationLogo)) {\n      setIsLoading(false);\n    }\n  }, [isDataFetched, isLogoRendered, logos.associationLogo]);\n  \n  useEffect(() => {\n    localStorage.setItem('nazsAdminLoggedIn', isAdminLoggedIn.toString());\n  }, [isAdminLoggedIn]);\n\n  const loginAdmin = (pin: string) => {\n    if (pin === defaultAdminPin) {\n      setIsAdminLoggedIn(true);\n      return true;\n    }\n    return false;\n  };\n\n  const logoutAdmin = () => {\n    setIsAdminLoggedIn(false);\n  };\n\n  const uploadFileToSupabase = async (fileBlob: Blob, pathPrefix: string, fileNameWithoutExt: string): Promise<string> => {\n    if (!supabase) {\n      throw new Error(\"Supabase client not available for file upload.\");\n    }\n    const fileExt = fileBlob.type.split('/')[1] || 'png';\n    const fullFileName = `${fileNameWithoutExt}.${fileExt}`;\n    const filePath = `${pathPrefix}/${Date.now()}_${fullFileName}`;\n\n    const { error: uploadError } = await supabase.storage\n      .from(STORAGE_BUCKET_NAME)\n      .upload(filePath, fileBlob, { upsert: true }); \n\n    if (uploadError) {\n      console.error(`Error uploading ${fullFileName}:`, uploadError);\n      throw uploadError;\n    }\n    const { data } = supabase.storage.from(STORAGE_BUCKET_NAME).getPublicUrl(filePath);\n    if (!data.publicUrl) {\n      throw new Error(\"Upload succeeded but failed to get public URL.\");\n    }\n    return data.publicUrl;\n  };\n\n  const deleteFileFromSupabase = async (fileUrl: string | null): Promise<void> => {\n    if (!fileUrl || !supabase) return;\n  \n    const isSupabaseUrl = fileUrl.includes('iwkslfapaxafwghfhefu.supabase.co');\n  \n    if (!isSupabaseUrl) {\n      console.log('Skipping deletion for non-Supabase URL:', fileUrl);\n      return;\n    }\n  \n    try {\n      const url = new URL(fileUrl);\n      const pathSegments = url.pathname.split('/');\n      const bucketNameIndex = pathSegments.findIndex(segment => segment === STORAGE_BUCKET_NAME);\n      if (bucketNameIndex === -1 || bucketNameIndex + 1 >= pathSegments.length) {\n        console.warn(\"Could not determine file path from Supabase URL for deletion:\", fileUrl);\n        return;\n      }\n      const filePath = pathSegments.slice(bucketNameIndex + 1).join('/');\n      \n      const { error } = await supabase.storage.from(STORAGE_BUCKET_NAME).remove([filePath]);\n      if (error) {\n        console.warn(`Could not delete file '${filePath}' from storage: ${error.message}`);\n      }\n    } catch (e) {\n      console.error(\"Error parsing or deleting file URL:\", fileUrl, e);\n    }\n  };\n\n  const updateLogo = async (logoType: 'associationLogo' | 'schoolLogo', fileDataUrl: string | null) => {\n    if (!supabase) throw new Error(\"Supabase client not available for updating logo.\");\n    \n    let newLogoUrl: string | null = null;\n    const currentLogoUrl = logos[logoType];\n\n    if (fileDataUrl) { \n      const blob = dataURIToBlob(fileDataUrl);\n      if (blob) {\n        if (currentLogoUrl) await deleteFileFromSupabase(currentLogoUrl); \n        newLogoUrl = await uploadFileToSupabase(blob, 'logos', logoType);\n      }\n    } else if (currentLogoUrl) { \n      await deleteFileFromSupabase(currentLogoUrl);\n    }\n\n    const updatedLogos = { ...logos, [logoType]: newLogoUrl };\n    const { error } = await supabase\n      .from('app_settings')\n      .upsert({ id: APP_SETTINGS_ID, logos: updatedLogos, fyb_week_settings: fybWeekSettings })\n      .select()\n      .single();\n\n    if (error) throw error;\n    setLogosState(updatedLogos);\n  };\n  \n  const updateFybWeekTextSettings = async (settings: Partial<Pick<FYBWeekSettings, 'title' | 'schedule' | 'activities' | 'isUnlocked'>>) => {\n    if (!supabase) throw new Error(\"Supabase client not available for updating FYB week settings.\");\n\n    const updatedSettings = { ...fybWeekSettings, ...settings };\n    const { error } = await supabase\n      .from('app_settings')\n      .upsert({ id: APP_SETTINGS_ID, fyb_week_settings: updatedSettings, logos: logos })\n      .select()\n      .single();\n    \n    if (error) throw error;\n    setFybWeekSettingsState(updatedSettings);\n  };\n\n  const addStudent = async (studentData: Omit<Student, 'id' | 'created_at' | 'updated_at'>) => {\n    if (!supabase) throw new Error(\"Supabase client not available.\");\n\n    let profileImageUrl: string | null = studentData.image_src;\n    let flyerImageUrl: string | null = studentData.flyer_image_src;\n\n    try {\n      if (studentData.image_src && studentData.image_src.startsWith('data:')) {\n        const blob = dataURIToBlob(studentData.image_src);\n        if (blob) {\n          profileImageUrl = await uploadFileToSupabase(blob, 'student_profiles', `profile_${uuidv4()}`);\n        }\n      }\n    } catch (e: any) {\n      throw new Error(`Profile image upload failed: ${e.message}`);\n    }\n\n    try {\n      if (studentData.flyer_image_src && studentData.flyer_image_src.startsWith('data:')) {\n        const blob = dataURIToBlob(studentData.flyer_image_src);\n        if (blob) {\n          flyerImageUrl = await uploadFileToSupabase(blob, 'student_flyers', `flyer_${uuidv4()}`);\n        }\n      }\n    } catch (e: any) {\n      if (profileImageUrl && profileImageUrl !== studentData.image_src) {\n        await deleteFileFromSupabase(profileImageUrl);\n      }\n      throw new Error(`Flyer image upload failed: ${e.message}`);\n    }\n\n    const studentToInsert = {\n      ...studentData,\n      id: uuidv4(),\n      image_src: profileImageUrl,\n      flyer_image_src: flyerImageUrl,\n    };\n\n    try {\n      const { data: newStudent, error } = await supabase\n        .from('students')\n        .insert(studentToInsert)\n        .select()\n        .single();\n\n      if (error) throw error;\n      if (newStudent) setStudents(prev => [...prev, newStudent].sort((a, b) => a.name.localeCompare(b.name)));\n    } catch (e: any) {\n      if (profileImageUrl && profileImageUrl !== studentData.image_src) {\n        await deleteFileFromSupabase(profileImageUrl);\n      }\n      if (flyerImageUrl && flyerImageUrl !== studentData.flyer_image_src) {\n        await deleteFileFromSupabase(flyerImageUrl);\n      }\n      throw new Error(`Database insert failed: ${e.message}`);\n    }\n  };\n\n  const updateStudent = async (studentData: Student) => {\n    if (!supabase) throw new Error(\"Supabase client not available.\");\n\n    const originalStudent = students.find(s => s.id === studentData.id);\n    if (!originalStudent) throw new Error(\"Student not found for update\");\n\n    let updatedPayload = { ...studentData };\n\n    try {\n        if (studentData.image_src && studentData.image_src.startsWith('data:')) {\n            if (originalStudent.image_src) await deleteFileFromSupabase(originalStudent.image_src);\n            const blob = dataURIToBlob(studentData.image_src);\n            if (blob) {\n                updatedPayload.image_src = await uploadFileToSupabase(blob, 'student_profiles', `profile_${studentData.id}_${Date.now()}`);\n            }\n        } else if (studentData.image_src === null && originalStudent.image_src) {\n            await deleteFileFromSupabase(originalStudent.image_src);\n        }\n    } catch (e: any) {\n        throw new Error(`Profile image update failed: ${e.message}`);\n    }\n\n    try {\n        if (studentData.flyer_image_src && studentData.flyer_image_src.startsWith('data:')) {\n            if (originalStudent.flyer_image_src) await deleteFileFromSupabase(originalStudent.flyer_image_src);\n            const blob = dataURIToBlob(studentData.flyer_image_src);\n            if (blob) {\n                updatedPayload.flyer_image_src = await uploadFileToSupabase(blob, 'student_flyers', `flyer_${studentData.id}_${Date.now()}`);\n            }\n        } else if (studentData.flyer_image_src === null && originalStudent.flyer_image_src) {\n            await deleteFileFromSupabase(originalStudent.flyer_image_src);\n        }\n    } catch (e: any) {\n        throw new Error(`Flyer image update failed: ${e.message}`);\n    }\n    \n    try {\n      const { id, created_at, updated_at, ...updateForDb } = updatedPayload;\n\n      const { data: updatedStudent, error } = await supabase\n        .from('students')\n        .update(updateForDb)\n        .eq('id', studentData.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      if (updatedStudent) setStudents(prev => prev.map(s => s.id === updatedStudent.id ? updatedStudent : s).sort((a, b) => a.name.localeCompare(b.name)));\n    } catch (e: any) {\n        throw new Error(`Database update failed: ${e.message}`);\n    }\n  };\n\n  const deleteStudent = async (studentId: string) => {\n    if (!supabase) throw new Error(\"Supabase client not available for deleting student.\");\n    \n    const studentToDelete = students.find(s => s.id === studentId);\n    if (studentToDelete) {\n      if (studentToDelete.image_src) await deleteFileFromSupabase(studentToDelete.image_src);\n      if (studentToDelete.flyer_image_src) await deleteFileFromSupabase(studentToDelete.flyer_image_src);\n    }\n\n    const { error } = await supabase.from('students').delete().eq('id', studentId);\n    if (error) throw error;\n    setStudents(prev => prev.filter(s => s.id !== studentId));\n  };\n  \n  const addFybEventImages = async (files: File[]) => {\n    if (!supabase) throw new Error(\"Supabase client not available for adding FYB event images.\");\n  \n    const uploadPromises = files.map(file => {\n      const imageId = uuidv4();\n      const safeFileName = file.name.replace(/[^a-zA-Z0-9_.-]/g, '_');\n      return uploadFileToSupabase(file, 'fyb_event_images', `${imageId}_${safeFileName}`)\n        .then(imageUrl => ({ id: imageId, src: imageUrl, name: file.name }));\n    });\n  \n    try {\n      const newImages: FYBEventImage[] = await Promise.all(uploadPromises);\n      \n      const updatedImages = [...fybWeekSettings.eventImages, ...newImages];\n      const updatedSettings = { ...fybWeekSettings, eventImages: updatedImages };\n  \n      const { error } = await supabase\n        .from('app_settings')\n        .upsert({ id: APP_SETTINGS_ID, fyb_week_settings: updatedSettings, logos: logos })\n        .select()\n        .single();\n  \n      if (error) {\n        // If the DB update fails, try to clean up the uploaded files\n        newImages.forEach(img => deleteFileFromSupabase(img.src));\n        throw error;\n      }\n      \n      setFybWeekSettingsState(updatedSettings);\n    } catch (uploadError) {\n      // This will catch any error from Promise.all, including individual upload failures.\n      console.error(\"An error occurred during the bulk image upload process:\", uploadError);\n      throw new Error(\"One or more image uploads failed. Please try again.\");\n    }\n  };\n\n  const deleteFybEventImage = async (imageId: string) => {\n    if (!supabase) throw new Error(\"Supabase client not available for deleting FYB event image.\");\n\n    const imageToDelete = fybWeekSettings.eventImages.find(img => img.id === imageId);\n    if (imageToDelete?.src) { \n      await deleteFileFromSupabase(imageToDelete.src);\n    }\n    \n    const updatedImages = fybWeekSettings.eventImages.filter(img => img.id !== imageId);\n    const updatedSettings = { ...fybWeekSettings, eventImages: updatedImages };\n\n    const { error } = await supabase\n      .from('app_settings')\n      .upsert({ id: APP_SETTINGS_ID, fyb_week_settings: updatedSettings, logos: logos })\n      .select()\n      .single();\n\n    if (error) throw error;\n    setFybWeekSettingsState(updatedSettings);\n  };\n\n\n  return (\n    <AppContext.Provider value={{\n      students, setStudents, \n      logos, \n      fybWeekSettings, \n      adminPin: defaultAdminPin,\n      isAdminLoggedIn, \n      loginAdmin, logoutAdmin,\n      addStudent, updateStudent, deleteStudent,\n      addFybEventImages, deleteFybEventImage\n    }}>\n      {isLoading ? (\n        <div className=\"fixed inset-0 z-[300] flex flex-col items-center justify-center bg-background\">\n          <div className=\"w-32 h-32 md:w-48 md:h-48 flex items-center justify-center\">\n            {logos.associationLogo && isDataFetched ? (\n              <Image \n                src={logos.associationLogo} \n                alt=\"Association Logo\" \n                width={192} \n                height={192} \n                className=\"object-contain\" \n                unoptimized\n                onLoad={() => setIsLogoRendered(true)}\n                onError={() => setIsLogoRendered(true)} // Also handle error case\n              />\n            ) : (\n              <div className=\"w-full h-full animate-pulse\">\n                <AssociationLogoPlaceholder className=\"w-full h-full text-primary\" />\n              </div>\n            )}\n          </div>\n          <p className=\"mt-4 text-lg font-headline text-primary\">Loading Application Data...</p>\n        </div>\n      ) : (\n        children\n      )}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":";;;;;AAEA,sCAAsC;AACtC;;AAHA;;AAUA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAS3B,MAAM,cAAc;IAClB,WAAW;IACX,cAAc;IACd,eAAe;IACf,cAAc;AAChB;AAEA,IAAI,QAAQ;AAEZ,SAAS;IACP,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,gBAAgB;IAC7C,OAAO,MAAM,QAAQ;AACvB;AA0BA,MAAM,gBAAgB,IAAI;AAE1B,MAAM,mBAAmB,CAAC;IACxB,IAAI,cAAc,GAAG,CAAC,UAAU;QAC9B;IACF;IAEA,MAAM,UAAU,WAAW;QACzB,cAAc,MAAM,CAAC;QACrB,SAAS;YACP,MAAM;YACN,SAAS;QACX;IACF,GAAG;IAEH,cAAc,GAAG,CAAC,SAAS;AAC7B;AAEO,MAAM,UAAU,CAAC,OAAc;IACpC,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ;oBAAC,OAAO,KAAK;uBAAK,MAAM,MAAM;iBAAC,CAAC,KAAK,CAAC,GAAG;YACnD;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,GAAG;wBAAE,GAAG,CAAC;wBAAE,GAAG,OAAO,KAAK;oBAAC,IAAI;YAE3D;QAEF,KAAK;YAAiB;gBACpB,MAAM,EAAE,OAAO,EAAE,GAAG;gBAEpB,2EAA2E;gBAC3E,uCAAuC;gBACvC,IAAI,SAAS;oBACX,iBAAiB;gBACnB,OAAO;oBACL,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;wBACpB,iBAAiB,MAAM,EAAE;oBAC3B;gBACF;gBAEA,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,WAAW,YAAY,YAC5B;4BACE,GAAG,CAAC;4BACJ,MAAM;wBACR,IACA;gBAER;YACF;QACA,KAAK;YACH,IAAI,OAAO,OAAO,KAAK,WAAW;gBAChC,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,EAAE;gBACZ;YACF;YACA,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,OAAO;YAC5D;IACJ;AACF;AAEA,MAAM,YAA2C,EAAE;AAEnD,IAAI,cAAqB;IAAE,QAAQ,EAAE;AAAC;AAEtC,SAAS,SAAS,MAAc;IAC9B,cAAc,QAAQ,aAAa;IACnC,UAAU,OAAO,CAAC,CAAC;QACjB,SAAS;IACX;AACF;AAIA,SAAS,MAAM,EAAE,GAAG,OAAc;IAChC,MAAM,KAAK;IAEX,MAAM,SAAS,CAAC,QACd,SAAS;YACP,MAAM;YACN,OAAO;gBAAE,GAAG,KAAK;gBAAE;YAAG;QACxB;IACF,MAAM,UAAU,IAAM,SAAS;YAAE,MAAM;YAAiB,SAAS;QAAG;IAEpE,SAAS;QACP,MAAM;QACN,OAAO;YACL,GAAG,KAAK;YACR;YACA,MAAM;YACN,cAAc,CAAC;gBACb,IAAI,CAAC,MAAM;YACb;QACF;IACF;IAEA,OAAO;QACL,IAAI;QACJ;QACA;IACF;AACF;AAEA,SAAS;;IACP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAS;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;8BAAE;YACd,UAAU,IAAI,CAAC;YACf;sCAAO;oBACL,MAAM,QAAQ,UAAU,OAAO,CAAC;oBAChC,IAAI,QAAQ,CAAC,GAAG;wBACd,UAAU,MAAM,CAAC,OAAO;oBAC1B;gBACF;;QACF;6BAAG;QAAC;KAAM;IAEV,OAAO;QACL,GAAG,KAAK;QACR;QACA,SAAS,CAAC,UAAqB,SAAS;gBAAE,MAAM;gBAAiB;YAAQ;IAC3E;AACF;GAlBS","debugId":null}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}}]
}